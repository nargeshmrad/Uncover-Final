HTML


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Students Crush Eraser Interaction</title>
  <style>
      html, body {
      margin: 0;
      height: 100%;
      background: #f0f0f0;
    }

    .container {
      position: relative;
      width: 100%;
      height: 100%;
      overflow: hidden;
    }

    .container img.background {
      width: 100%;
      height: 100%;
      object-fit: contain;
      display: block;
    }

    .students {
      position: absolute;
      top: 30%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 30%; /* Adjust this value to change students image size */
      height: auto;
      z-index: 1;
      opacity: 1;
      transition: opacity 1s ease;
    }

    .students.hidden {
      opacity: 0;
      pointer-events: none;
    }

    .letter {
      position: absolute;
      top: 80%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 30%; /* Adjust size of the letter */
      height: auto;
      z-index: 4;
      opacity: 0;
      transition: opacity 1s ease;
      cursor: pointer;
    }

    .letter.visible {
      opacity: 1;
    }

    .opened-letter {
      position: absolute;
      top: 70%; /* Center vertically */
      left: 50%;
      transform: translate(-50%, -50%);
      width: 30%; /* Make opened letter larger */
      height: auto;
      z-index: 4;
      opacity: 0;
      transition: all 0.3s ease;
      pointer-events: none;
      cursor: pointer;
    }

    .opened-letter.visible {
      opacity: 1;
      pointer-events: auto;
    }

    .opened-letter.front {
      z-index: 6;
    }

    .opened-letter2 {
      position: absolute;
      top: 60%; /* Adjust vertical position */
      left: 50%;
      transform: translate(-50%, -50%);
      width: 20%; /* Adjust size */
      height: auto;
      z-index: 5;
      opacity: 0;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .opened-letter2.visible {
      opacity: 1;
    }

    .opened-letter2.front {
      z-index: 6;
    }

    .scribbles {
      position: absolute;
      top: 25%;
      left: 45%;
      transform: translate(-50%, -50%);
      width: 20%; /* Adjust this value to change scribbles size */
      height: auto;
      z-index: 2;
      transition: opacity 4s ease;
    }

    .eraser {
      position: absolute;
      bottom: 700px;
      right: 600px;
      width: 100px; /* Adjust this value to change eraser size */
      height: auto;
      cursor: grab;
      z-index: 3;
    }

    .eraser.dragging {
      cursor: grabbing;
    }
  </style>
</head>
<body>
  <!-- Audio elements -->
  <audio id="eraserSound" preload="auto">
    <source src="../assets/StudentsCrush/eraser.mp3" type="audio/mpeg">
  </audio>
  <audio id="laughingSound" preload="auto" loop>
    <source src="../assets/StudentsCrush/laughing.mp3" type="audio/mpeg">
  </audio>

  <div class="container" id="interactionArea">
    <img class="background" src="../assets/StudentsCrush/ScribblesAlbum.png" alt="Background">
    <img class="students" id="students1" src="../assets/StudentsCrush/firstStudents.png" alt="Students">
    <img class="students hidden" id="students2" src="../assets/StudentsCrush/Students2.png" alt="Students 2">
    <img class="students hidden" id="students3" src="../assets/StudentsCrush/Students3.png" alt="Students 3">
    <img class="scribbles" id="scribbles" src="../assets/StudentsCrush/scribbles.png" alt="Scribbles">
    <img class="eraser" id="eraser" src="../assets/StudentsCrush/Eraser.png" alt="Eraser">
    <img class="letter" id="foldedLetter" src="../assets/StudentsCrush/foldedLetter.png" alt="Folded Letter">
    <img class="opened-letter" id="openedLetter" src="../assets/StudentsCrush/openedLetter.png" alt="Opened Letter">
    <img class="opened-letter2" id="openedLetter2" src="../assets/StudentsCrush/openedLetter2.png" alt="Opened Letter 2">
  </div>

  <script src="StudentsCrush.js"></script>
</body>
</html>


JS

document.addEventListener('DOMContentLoaded', () => {
    const eraser = document.getElementById('eraser');
    const scribbles = document.getElementById('scribbles');
    const students1 = document.getElementById('students1');
    const students2 = document.getElementById('students2');
    const students3 = document.getElementById('students3');
    const foldedLetter = document.getElementById('foldedLetter');
    const openedLetter = document.getElementById('openedLetter');
    const openedLetter2 = document.getElementById('openedLetter2');
    const eraserSound = document.getElementById('eraserSound');
    const laughingSound = document.getElementById('laughingSound');
  
    // Set initial volume for laughing sound
    laughingSound.volume = 0.3; // 30% volume
    
    let isDragging = false;
    let startX, startY;
    let transitionStarted = false;
  
    // Eraser drag functionality
    eraser.addEventListener('mousedown', (e) => {
      isDragging = true;
      eraser.classList.add('dragging');
      
      // Calculate the offset from the mouse to the top-left of the eraser
      const eraserRect = eraser.getBoundingClientRect();
      startX = e.clientX - eraserRect.left;
      startY = e.clientY - eraserRect.top;
    });
  
    document.addEventListener('mousemove', (e) => {
      if (!isDragging) return;
  
      // Calculate new position
      const containerRect = eraser.parentElement.getBoundingClientRect();
      let newLeft = e.clientX - containerRect.left - startX;
      let newTop = e.clientY - containerRect.top - startY;
  
      // Keep eraser within container bounds
      newLeft = Math.max(0, Math.min(newLeft, containerRect.width - eraser.offsetWidth));
      newTop = Math.max(0, Math.min(newTop, containerRect.height - eraser.offsetHeight));
  
      eraser.style.left = `${newLeft}px`;
      eraser.style.top = `${newTop}px`;
  
      // Check for collision between eraser and scribbles
      const eraserRect = eraser.getBoundingClientRect();
      const scribblesRect = scribbles.getBoundingClientRect();
  
      // Check if the eraser overlaps with the scribbles
      const overlap = !(eraserRect.right < scribblesRect.left || 
                       eraserRect.left > scribblesRect.right || 
                       eraserRect.bottom < scribblesRect.top || 
                       eraserRect.top > scribblesRect.bottom);
  
      // If there's an overlap while dragging, start the transition sequence
      if (overlap && !transitionStarted) {
        transitionStarted = true;
        scribbles.style.opacity = '0';
        // Play eraser sound
        eraserSound.currentTime = 0; // Reset sound to start
        eraserSound.play();
        
        // Start the image transition sequence
        setTimeout(() => {
          // Hide first image and show second
          students1.classList.add('hidden');
          students2.classList.remove('hidden');
          
          // After 2 more seconds, show third image
          setTimeout(() => {
            students2.classList.add('hidden');
            students3.classList.remove('hidden');
            
            // Show the folded letter after 5 more seconds
            setTimeout(() => {
              foldedLetter.classList.add('visible');
            }, 3000);
          }, 4000);
        }, 4000);
      }
    });
  
    document.addEventListener('mouseup', () => {
      if (!isDragging) return;
      isDragging = false;
      eraser.classList.remove('dragging');
    });
  
    // Handle student hover sound effects
    const handleStudentHover = (isHovering) => {
      if (isHovering) {
        laughingSound.play();
      } else {
        // Fade out the laughing sound
        const fadeOut = setInterval(() => {
          if (laughingSound.volume > 0.01) {
            laughingSound.volume -= 0.05;
          } else {
            laughingSound.pause();
            laughingSound.volume = 0.3; // Reset volume for next play
            clearInterval(fadeOut);
          }
        }, 100);
      }
    };
  
    // Add hover listeners to all student images
    [students1, students2, students3].forEach(student => {
      student.addEventListener('mouseenter', () => handleStudentHover(true));
      student.addEventListener('mouseleave', () => handleStudentHover(false));
    });
  
    // Handle letter click and transition
    foldedLetter.addEventListener('click', () => {
      // Fade out folded letter
      foldedLetter.style.opacity = '0';
      
      // After folded letter fades out, show opened letter
      setTimeout(() => {
        foldedLetter.style.display = 'none'; // Hide completely after fade
        openedLetter.classList.add('visible');
        
        // Show second opened letter after 6 seconds
        setTimeout(() => {
          openedLetter2.classList.add('visible');
        }, 6000);
      }, 1000); // Wait for fade out to complete
    });
  
    // Handle clicking on opened letters to bring them to front
    openedLetter.addEventListener('click', () => {
      // Remove front class from other letter
      openedLetter2.classList.remove('front');
      // Add front class to clicked letter
      openedLetter.classList.add('front');
    });
  
    openedLetter2.addEventListener('click', () => {
      // Remove front class from other letter
      openedLetter.classList.remove('front');
      // Add front class to clicked letter
      openedLetter2.classList.add('front');
    });
  });
  
  